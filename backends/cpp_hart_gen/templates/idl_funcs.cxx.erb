
// THIS FILE IS AUTOGENERATED
// IT IS NOT STANDALONE. IT IS A FUNCTION LIST FOR THE Hart CLASS

#include "udb/cfgs/<%= cfg_arch.name %>/hart.hxx"

using namespace udb;

#define __UDB_CONSTEXPR_FUNC_CALL
#define __UDB_CONST_GLOBAL(global_name) <%= name_of(:hart, cfg_arch) %>::global_name
#define __UDB_MUTABLE_GLOBAL(global_name) global_name
#define __UDB_STRUCT(struct_name) <%= cfg_arch.name.camelize %>_ ## struct_name ## _Struct

<%# need to get symtab at function scope -%>
<%- cfg_arch.reachable_functions.each do |func| -%>
<%- next if func.builtin? || func.generated? -%>
<%- next if func.constexpr?(cfg_arch.symtab) # constexpr funcs are class methods -%>
<%- next if func.templated? # templated functions have to go in idl_funcs_impl.hxx -%>
<%- symtab = cfg_arch.symtab.global_clone.push(nil) -%>

//
// <%= func.description.gsub("\n", "\n// ") %>
<%= func.gen_cpp_prototype(symtab, 0, include_semi: false, cpp_class: name_of(:hart, cfg_arch)) %> {
  <%- unless func.gen_return_type(symtab) == "void" -%>
    static_assert(std::is_default_constructible_v<<%= func.gen_return_type(symtab) %>>, "Return type is not default constructible");
    <%= func.gen_return_type(symtab) %> ret;
    return ret;
  <%- end -%>
}

<%- symtab.release -%>
<%- end -%>

#undef __UDB_CONSTEXPR_FUNC_CALL
#undef __UDB_CONST_GLOBAL
#undef __UDB_MUTABLE_GLOBAL
#undef __UDB_STRUCT
