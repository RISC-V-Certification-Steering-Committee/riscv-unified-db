#!/bin/bash

ROOT=$(dirname $(dirname $(realpath $BASH_SOURCE[0])))
OLDWD=$PWD
cd $ROOT

CONTAINER_TAG=`cat ${ROOT}/bin/.container-tag`

if [ -v GITHUB_ACTIONS ]; then
  echo "ACTIONS"
  CONTAINER_PATH=${ROOT}/.singularity/image.sif
  HOME_PATH=${GITHUB_WORKSPACE}
  HOME_OPT="--home ${ROOT}/.home"
  SINGULARITY_CACHE=--disable-cache
else
  CONTAINER_PATH=${ROOT}/.singularity/image-$CONTAINER_TAG.sif
  HOME_PATH=${HOME}
  HOME_OPT="--bind ${ROOT}/.home:${HOME_PATH} --bind /local/mnt/workspace/.vscode-server:/local/mnt/workspace/.vscode-server"
  SINGULARITY_CACHE=
fi

if [ -f $ROOT/.git ]; then
  # if this is a worktree, need to add the parent git repo in, too
  GIT_PATH=`git rev-parse --git-common-dir | tr -d '\n' | xargs dirname`
  HOME_OPT="${HOME_OPT} --bind ${GIT_PATH}:${GIT_PATH}"
fi

if [ -v DEVCONTAINER_ENV ]; then
  RUN=""
else
  RUN="singularity run  ${HOME_OPT} ${CONTAINER_PATH} "
fi

if [ ! -d $ROOT/.home ]; then
  mkdir $ROOT/.home
fi

if [ ! -v DEVCONTAINER_ENV ]; then
  if [ ! -f ${CONTAINER_PATH} ]; then
  echo "Fetching container..."
    if [ ! -d "${ROOT}/.singularity" ]; then
      mkdir -p ${ROOT}/.singularity
    fi
    singularity pull ${SINGULARITY_CACHE} ${CONTAINER_PATH} oras://docker.io/riscvintl/spec-generator:$CONTAINER_TAG
  fi
fi

if [ ! -f $ROOT/.bundle/config ]; then
  OLDDIR=$PWD
  cd $ROOT
  ${RUN} bundle config set --local path ${ROOT}/.home/.gems
  ${RUN} bundle config set --local cache_path ${ROOT}/.home/.cache
  cd $OLDDIR
fi

if [ ! -d $ROOT/.home/.gems ]; then
  OLDDIR=$PWD
  cd $ROOT
  ${RUN} bundle install
  cd $OLDDIR
fi

if [ ! -d $ROOT/.home/.venv ]; then
  ${RUN} /usr/bin/python3 -m venv ${ROOT}/.home/.venv
fi
source ${ROOT}/.home/.venv/bin/activate
if [ ! -f ${ROOT}/.home/.venv/bin/pre-commit ]; then
  ${RUN} ${ROOT}/.home/.venv/bin/pip install -r requirements.txt
fi

# if [ ! -f $ROOT/ext/riscv-opcodes/README.md ]; then
#   git submodule update --init ext/riscv-opcodes
# fi

if [[ ! -z "$DEVELOPMENT" && $DEVELOPMENT -eq 1 ]]; then
  if [ ! -d "${ROOT}/.home/.yard/gem_index"]; then
    ${RUN} bundle exec --gemfile ${ROOT}/Gemfile yard config --gem-install-yri
    ${RUN} bundle exec --gemfile ${ROOT}/Gemfile yard gems
    touch ${ROOT}/.stamps/dev_gems
  fi
fi

if [ ! -d ${ROOT}/node_modules ]; then
  ${RUN} npm i
fi

if [ -v DEVCONTAINER_ENV ]; then
  BUNDLE="bundle"
  RUBY="bundle exec ruby"
  RAKE="bundle exec rake"
  NPM="npm"
  NPX="npx"
  NODE="node"
  PYTHON="${ROOT}/.home/.venv/bin/python3"
  PIP="${ROOT}/.home/.venv/bin/pip"
  BASH="bash"
  GPP="g++"
else
  BUNDLE="singularity run ${HOME_OPT} ${CONTAINER_PATH} bundle"
  RUBY="singularity run ${HOME_OPT} ${CONTAINER_PATH} bundle exec ruby"
  RAKE="singularity run ${HOME_OPT} ${CONTAINER_PATH} bundle exec rake"
  NPM="singularity run ${HOME_OPT} ${CONTAINER_PATH} npm"
  NPX="singularity run ${HOME_OPT} ${CONTAINER_PATH} npx"
  NODE="singularity run ${HOME_OPT} ${CONTAINER_PATH} node"
  PYTHON="singularity run ${HOME_OPT} ${CONTAINER_PATH} ${ROOT}/.home/.venv/bin/python3"
  PIP="singularity run ${HOME_OPT} ${CONTAINER_PATH} ${ROOT}/.home/.venv/bin/pip"
  BASH="singularity run ${HOME_OPT} ${CONTAINER_PATH} bash"
  GPP="singularity run ${HOME_OPT} ${CONTAINER_PATH} g++"
fi

if [ ! -f $ROOT/.git/hooks/pre-commit ]; then
  cat << HOOK > $ROOT/.git/hooks/pre-commit
#!/usr/bin/env bash
# File generated by pre-commit: https://pre-commit.com
# ID: 138fd403232d2ddd5efb44317e38bf03

# start templated
INSTALL_PYTHON=$ROOT/bin/python
ARGS=(hook-impl --config=.pre-commit-config.yaml --hook-type=pre-commit)
# end templated

HERE="$(cd "$(dirname "\$0")" && pwd)"
ARGS+=(--hook-dir "\$HERE" -- "\$@")

if [ -x "\$INSTALL_PYTHON" ]; then
    exec "\$INSTALL_PYTHON" -mpre_commit "\${ARGS[@]}"
elif command -v pre-commit > /dev/null; then
    exec pre-commit "\${ARGS[@]}"
else
    echo '`pre-commit` not found.  Did you forget to activate your virtualenv?' 1>&2
    exit 1
fi
HOOK
  chmod +x $ROOT/.git/hooks/pre-commit
fi
