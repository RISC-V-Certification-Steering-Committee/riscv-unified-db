# yaml-language-server: $schema=../../../schemas/inst_schema.json

$schema: "inst_schema.json#"
kind: instruction
name: c.lqsp
long_name: Load quadruple word from stack pointer
description: |
  C.LQSP is an RV128C-only instruction that loads a 128-bit value from memory into register rd.
  It computes its effective address by adding the zero-extended offset, scaled by 16,
  to the stack pointer, x2.
  It expands to `lq` `rd, offset(x2)`.
  C.LQSP is only valid when rd &ne; x0 the code points with rd=x0 are reserved.
definedBy:
  anyOf:
    - C
    - Zca
base: 64
assembly: xd, imm(sp)
encoding:
  match: 001-----------10
  variables:
    - name: imm
      location: 5-2|12|6
      left_shift: 4
    - name: rd
      location: 11-7
      not: 0
access:
  s: always
  u: always
  vs: always
  vu: always
operation(): |
  if (implemented?(ExtensionName::C) && (CSR[misa].C == 1'b0)) {
    raise(ExceptionCode::IllegalInstruction, mode(), $encoding);
  }

  XReg virtual_address = X[2] + imm;

  X[rd] = read_memory<128>(virtual_address, $encoding);
