# yaml-language-server: $schema=../../../schemas/inst_schema.json

$schema: "inst_schema.json#"
kind: instruction
name: addi
format: { $ref: inst_format/itype.yaml# }
long_name: Add immediate
description: Add an immediate to the value in rs1, and store the result in rd
definedBy: I
assembly: xd, xs1, imm
encoding:
  match: -----------------000-----0010011
  variables:
  - field: { $ref: inst_format/itype.yaml#/fields/name=imm }
    name: imm
  - field: { $ref: inst_format/itype.yaml#/fields/name=rs1 }
    name: xs1
  - field: { $ref: inst_format/itype.yaml#/fields/name=rd }
    name: xd
access:
  s: always
  u: always
  vs: always
  vu: always
data_independent_timing: true
operation(): X[xd] = X[xs1] + sext(imm, 31);



sail(): |
  {
    let rs1_val = X(rs1);
    let immext : xlenbits = sign_extend(imm);
    let result : xlenbits = match op {
      RISCV_ADDI  => rs1_val + immext,
      RISCV_SLTI  => zero_extend(bool_to_bits(rs1_val <_s immext)),
      RISCV_SLTIU => zero_extend(bool_to_bits(rs1_val <_u immext)),
      RISCV_ANDI  => rs1_val & immext,
      RISCV_ORI   => rs1_val | immext,
      RISCV_XORI  => rs1_val ^ immext
    };
    X(rd) = result;
    RETIRE_SUCCESS
  }




